// This project is based on a tutorial from Awesome Tuts with some modifications of my own.
// I do not own the visual blueprints used as a starter content for the game.

#include "PacmanController2.h"
#include "PacmanPawn2.h"

// This function is adapted from the tutorial
// Return a pawn type to overload the function provided in the pawn class
APacmanPawn2* APacmanController2::GetPacmanPawn2() const
{
	return Cast<APacmanPawn2>(GetPawn());
}

// This function is generated by UE4
void APacmanController2::SetupInputComponent()
{
	Super::SetupInputComponent();
	// my implementation for axis binding for the pawn
	InputComponent->BindAxis("MoveForward", this, &APacmanController2::MoveForward);
	InputComponent->BindAxis("MoveSideway", this, &APacmanController2::MoveSideway);
}

// My implementation of the pawn movement
// Movement on the X axis
void APacmanController2::MoveForward(float Axis)
{
	MovementDirection.X = FMath::Clamp(Axis, -1.0f, 1.0f);
	FVector NewLocation = GetPacmanPawn2()->GetActorLocation() + (MovementDirection * GetWorld()->GetDeltaSeconds() * MovementSpeed);
	GetPacmanPawn2()->SetActorLocation(NewLocation);
	if (GetPacmanPawn2() != nullptr)
	{
		GetPacmanPawn2()->SetActorRotation(FRotator(0, 90, 0));
	}
	GetPacmanPawn2()->SetActorRotation(FRotator(0, 270, 0));

	//Rotate the pawn as it moves, work in progress

	//FRotator Rotation = GetControlRotation();
	//FRotator YawRotation(0.0f, Rotation.Yaw, 0.0f);

	//FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);
	//GetPacmanPawn2()->SetDirection(Direction);
}

// My implementation of the pawn movement
// Movement on the Y axis
void APacmanController2::MoveSideway(float Axis)
{
	MovementDirection.Y = FMath::Clamp(Axis, -1.0f, 1.0f);
	FVector NewLocation = GetPacmanPawn2()->GetActorLocation() + (MovementDirection * GetWorld()->GetDeltaSeconds() * MovementSpeed);
	GetPacmanPawn2()->SetActorLocation(NewLocation);
	if (GetPacmanPawn2() != nullptr)
	{
		GetPacmanPawn2()->SetActorRotation(FRotator(0, 180, 0));
	}
	GetPacmanPawn2()->SetActorRotation(FRotator(0, 0, 0));

	//Rotate the pawn as it moves, work in progress

	//FRotator Rotation = GetControlRotation();
	//FRotator YawRotation(0.0f, Rotation.Yaw, 0.0f);

	//FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::Y);
	//GetPacmanPawn2()->SetDirection(Direction);
}
